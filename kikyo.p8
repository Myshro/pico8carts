pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
function _init()
    center={
        x=63,
        y=63
    }
    scene = "menu"
    blink_count = 1
    t = 0
    bullets = {}
    enemies = {}
    star = {
        x=0,
        y=0,
        angle=0,
        sprite=1,
        radius=13
    }
    score = 0
    offset=8
    lives = 3
    sfx(1)
end

function _update()
    blink_count += 1
    if scene == "game" then 
        update_game() 
    elseif scene == "menu" then 
        update_menu() 
    end
end

function _draw()
    if scene == "game" then 
        draw_game() 
    elseif scene == "menu" then 
        draw_menu() 
    end
end

function update_menu()
    if btnp(❎) then 
        scene = "game"
    end 
end

function update_game()
    t += 1
    if btn(2) then  
        star.angle += 0.025
    end

    if btn(3) then  
        star.angle -= 0.025
    end
    
    if (btn(0)) star.angle += 0.05
    if (btn(1)) star.angle -= 0.05

    if btnp(❎) then 
        scene = "menu"
    end 

    -- time related create function
    if t%3==0 then
         create_bullet() 
         if (t > 5000) t = 0
    end

    if t%24==0 then
        create_enemy()
    end


    -- create_enemy()
    handle_bullets()
    handle_enemies()
    handle_bullet_collisions()
end

function draw_menu()
    cls(1)
    -- spr(63, center.x-22, center.y-8)
    -- spr(62, center.x-31, center.y-8)
    sspr(112, 24, 8, 8, center.x-32, center.y-24, 32, 32)
    sspr(120, 24, 8, 8, center.x, center.y-24, 32, 32)
    -- sspr(120, 24, 8, 8, center.x-22, center.y-8, 64, 64)
    print("press ❎ to start", center.x - 32, center.y + 16, blink())
end

function draw_game()
    cls(0)
    print("score "..score,0,0,12)

    -- draw star
    star.x = center.x - 2 + star.radius * cos(star.angle)
    star.y = center.y + star.radius * sin(star.angle)
    star.sprite += 0.1
    if (star.sprite>=3) star.sprite=1

    sprite_ent(star)
    
    -- draw bed 
    sspr(32, 0, 8, 8, center.x - 8, center.y - 4, 16, 16)

    -- draw bullets
    for i=#bullets,1,-1 do
        local bul = bullets[i]
        -- spr(1,bul.x,bul.y)
        circfill(bul.x + 3, bul.y, 1, 8)
    end

    -- draw enemies
    for i=#enemies,1,-1 do
        local enem = enemies[i]
        sprite_ent(enem)
    end
end

function blink()
    local blink_anim = {5,5,5,5,5,5,5,5,5,5,5,6,6,7,7,6,6,5}

    if (blink_count > #blink_anim) blink_count = 1

    return blink_anim[blink_count]
end

function create_bullet()
    local bul = {
    	x=star.x,
    	y=star.y+3,
    	speed=4,
    	angle=star.angle
    }
    add(bullets, bul)
end

function create_enemy()
    local side = flr(rnd(4))
    local enem={}
    if side == 0 then -- top = 0, right = 1, bot = 2, left = 3
        enem.x = rnd(128) 
        enem.y = 0 - offset
    elseif side == 1 then
        enem.x = 128 + offset
        enem.y = rnd(128)
    elseif side == 2 then
        enem.x = rnd(128)
        enem.y = 128 + offset
    elseif side == 3 then
        enem.x = 0 - offset
        enem.y = rnd(128)
    end 
    enem.sprite = 5
    enem.speed = rnd(0.3) + 1
    
    add(enemies, enem)
end 

function handle_bullets()
    for i=#bullets,1,-1 do
        local bul = bullets[i]
        bul.y += bul.speed * sin(bul.angle)
        bul.x += bul.speed * cos(bul.angle)

        -- if bul.x < -8 or bul.x > 128 + 8 or bul.y < -8 or bul.y > 128 + 8 then
        --     del(bullets, bul)
        -- end

        -- handle collision
        if (is_offscreen(bul.x, bul.y)) del(bullets, bul)
    end
end

function handle_enemies()
    for i=#enemies,1,-1 do
        local enem = enemies[i]
        -- move enemies
        local target_angle = atan2(center.x - 4 - enem.x, center.y - enem.y) 
        enem.x += cos(target_angle) * enem.speed
        enem.y += sin(target_angle) * enem.speed
        -- animate enemies
        enem.sprite += 0.1
        if (enem.sprite>=7) enem.sprite = 5
        
        -- handle collision
        if col(center, enem, 7, 7) then
            scene="menu"
            _init()
            del(enemies,enem)
        end

        if (is_offscreen(enem.x, enem.y)) del(enemies, enem)
    end
end

function handle_bullet_collisions()
    for enem in all(enemies) do
        for bul in all(bullets) do
            if col(enem, bul, 7, 2) then
                del(enemies, enem)
                sfx(0)
                score += 1
            end
        end
    end
end

function is_offscreen(x, y)
    return x < -offset*2 or x > 128 + offset*2 or y < -offset*2 or y > 128 + offset*2 
end

function sprite_ent(e)
    spr(e.sprite, e.x, e.y)
end

function dbg(str)
    print("*"..str, 0, 0, 8)
end

function col(a, b, a_off, b_off)
    local a_left=a.x
    local a_top=a.y
    local a_right=a.x+a_off
    local a_bottom=a.y+a_off
    
    local b_left=b.x
    local b_top=b.y
    local b_right=b.x+b_off
    local b_bottom=b.y+b_off

    if (a_top>b_bottom) return false 
    if (b_top>a_bottom) return false 
    if (a_left>b_right) return false 
    if (b_left>a_right) return false 
    return true
end

__gfx__
00000000000a0000000a000000000000400000040077770000777700000000000000000000000000000000000000000000000000000000004400000000000044
00000000000900000909090000000000400000040777777007777770000000000000000000000000000000000000000000000000000000004400000000000044
00700700009a9000000a000000000000266776627777777677777776000000000000000000000000000000000000000000000000000000002266677777766622
00077000a9a7a9a0a9a0a9a000000000467777647777777678777786000000000000000000000000000000000000000000000000000000002266777777776622
00077000009a9000000a000000000000467777647877778677788776000000000000000000000000000000000000000000000000000000002267777777777622
00700700000900000909090000000000266776627778877677777776000000000000000000000000000000000000000000000000000000002277777777777722
00000000000a0000000a000000000000222222220777776007777760000000000000000000000000000000000000000000000000000000002277777777777722
00000000000000000000000000000000200000020066660600666606000000000000000000000000000000000000000000000000000000002277777777777722
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004477777777777744
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004477777777777744
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002267777777777622
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002266777777776622
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002266677777766622
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002222222222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002200000000000022
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002200000000000022
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000700070007077777
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000707777707000700
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007770070077777777
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000700777007070707
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007770000077777777
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007700777077070700
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000700707007007700
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000700777007077077
__sfx__
0101000000650006500265004650076500c5500e5500f5500f5500d5500b55008550065500355000550005503230032300344003440034400344003440034400344003cb003bb003bb003ab003ab0039b0000000
010f00000c7500c7500c7500e7500e7500e75010750107501075011750117501375015750177501875018750187500f7001070011700000000000000000000000000000000000000000000000000000000000000
